- name: Install bind
  ansible.builtin.dnf:
    name: bind
    state: present

- name: Get IPs for DNS slaves
  ansible.builtin.set_fact:
    dns_slave_ips: "{{ dns_slave_ips | default() }}{{ lookup('community.general.dig', 'internal.' + item, 'qtype=A' ) }}; "
  loop: "{{ dns_slaves }}"

- name: Manage named.conf
  ansible.builtin.template:
    src: named.j2
    dest: /etc/named.conf
    owner: root
    group: named
    mode: "640"
  register: named_config

- name: Manage TSIG keys
  ansible.builtin.template:
    src: tsig.j2
    dest: /etc/named/{{ item }}.key
    owner: root
    group: named
    mode: "640"
  loop: "{{ dns_slaves }}"

- name: Manage zone configurations
  ansible.builtin.template:
    src: zone_config.j2
    dest: /etc/named/{{ item }}.conf
    owner: root
    group: named
    mode: "640"
  loop: "{{ dns_zones }}"
  register: zone_config

- name: Manage zone files
  ansible.builtin.template:
    src: zone/{{ item }}.j2
    dest: /var/named/{{ item }}.zone
    owner: named
    group: named
    mode: "640"
  loop: "{{ dns_zones }}"
  register: zone_files

- name: Start named service
  ansible.builtin.systemd:
    name: named.service
    state: started
    enabled: yes

- name: restart named
  ansible.builtin.systemd:
    name: named.service
    state: restarted
  when: named_config.changed or zone_config.changed

- name: rndc reload
  ansible.builtin.command: rndc reload
  when: zone_files.changed